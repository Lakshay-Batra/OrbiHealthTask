{"version":3,"sources":["components/NavigationBar.js","components/AddButton.js","components/Breadcrumb.js","components/Card.js","components/Content.js","components/AddEditCard.js","App.js","index.js"],"names":["NavigationBar","color","AddButton","props","useState","showDropdown","setShowDropDown","useEffect","window","addEventListener","removeEventListener","className","onClick","event","stopPropagation","fontSize","setShowAddEditCard","setOperation","style","width","Breadcrumb","alterPath","index","target","dataset","path","map","level","key","data-index","Card","editDeleteMenu","setEditDeleteMenu","rightClick","e","preventDefault","type","displayCurrentDirectory","name","cursor","deleteFileFolder","editFileFolder","onContextMenu","Content","contentOnScreen","item","AddEditCard","editValue","setName","onChange","value","placeholder","operation","handleEdit","createFileFolder","initialFolder","files","folders","App","showAddEditCard","driveContent","setDriveContent","setPath","concat","setContentOnScreen","setEditValue","editType","setEditType","findCurrentDirectory","currentDirectory","currentArrayToLookInto","forEach","i","length","newPath","push","newDriveContent","newArray","prevValue","fObject","duplicateItem","obj","alert","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.956ec0f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <nav>\r\n      <h1>\r\n        <DashboardIcon color=\"disabled\" />\r\n        Drive\r\n      </h1>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nfunction AddButton(props) {\r\n  const [showDropdown, setShowDropDown] = useState(false);\r\n\r\n  function handleAddClick(event) {\r\n    event.stopPropagation();\r\n    setShowDropDown(!showDropdown);\r\n  }\r\n  // adding event listener to hide dropDown when cicked anywhere on window\r\n  useEffect(() => {\r\n    if (showDropdown) {\r\n      window.addEventListener(\"click\", () => {\r\n        setShowDropDown(false);\r\n      });\r\n    }\r\n    return window.removeEventListener(\"click\", () => {\r\n      setShowDropDown(false);\r\n    });\r\n  }, [showDropdown]);\r\n\r\n  // function to open AddCard to create new file/folder\r\n  function setShowAddFolder() {\r\n    props.setShowAddEditCard(true);\r\n    props.setOperation(\"addFolder\");\r\n  }\r\n  function setShowAddFile() {\r\n    props.setShowAddEditCard(true);\r\n    props.setOperation(\"addFile\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-container\">\r\n      <div onClick={handleAddClick} className=\"add-btn\">\r\n        <AddIcon fontSize=\"large\" color=\"primary\" />\r\n        <span className=\"add-text\">New</span>\r\n      </div>\r\n\r\n      {showDropdown && (\r\n        <div onClick={(event) => event.stopPropagation()} className=\"add-menu\">\r\n          <div onClick={setShowAddFolder} className=\"flex-row-center\">\r\n            <FolderIcon />\r\n            <h3>Folder</h3>\r\n          </div>\r\n          <hr style={{ width: \"90%\" }} />\r\n          <div onClick={setShowAddFile} className=\"flex-row-center\">\r\n            <DescriptionIcon />\r\n            <h3>File</h3>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport AddButton from \"./AddButton\";\r\n\r\nfunction Breadcrumb(props) {\r\n  function alterPath(event) {\r\n    const index = event.target.dataset.index;\r\n    props.alterPath(index);\r\n  }\r\n  return (\r\n    <div className=\"breadcrumb\">\r\n      <AddButton\r\n        setOperation={props.setOperation}\r\n        setShowAddEditCard={props.setShowAddEditCard}\r\n      />\r\n      <div className=\"path-container\">\r\n        {props.path.map((level, index) => {\r\n          return <h5 onClick={alterPath} key={index} data-index={index}> {level} /</h5>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nfunction Card(props) {\r\n  const [editDeleteMenu, setEditDeleteMenu] = useState(false);\r\n  function rightClick(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setEditDeleteMenu(true);\r\n  }\r\n  useEffect(() => {\r\n    if (editDeleteMenu) {\r\n      window.addEventListener(\"click\", () => {\r\n        setEditDeleteMenu(false);\r\n      });\r\n    }\r\n    return window.removeEventListener(\"click\", () => {\r\n      setEditDeleteMenu(false);\r\n    });\r\n  }, [editDeleteMenu]);\r\n\r\n  function openNewDirectory() {\r\n    if (!editDeleteMenu && props.type === \"folder\") {\r\n      props.displayCurrentDirectory(props.name);\r\n    }\r\n  }\r\n  function handleDelete() {\r\n    props.deleteFileFolder(props.name, props.type);\r\n  }\r\n  function handleEdit() {\r\n    props.editFileFolder(props.name, props.type, \"edit\");\r\n  }\r\n  return (\r\n    <div onClick={openNewDirectory} className=\"card-container\">\r\n      {editDeleteMenu ? (\r\n        <div\r\n          onClick={(e) => e.stopPropagation()}\r\n          className=\"card\"\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          <DeleteIcon onClick={handleDelete} className=\"delete-icon\" />\r\n          <EditIcon onClick={handleEdit} className=\"edit-icon\" />\r\n        </div>\r\n      ) : props.type === \"folder\" ? (\r\n        <div onContextMenu={rightClick} className=\"card\">\r\n          <FolderIcon />\r\n          <span>{props.name}</span>\r\n        </div>\r\n      ) : (\r\n        <div onContextMenu={rightClick} className=\"card\">\r\n          <DescriptionIcon />\r\n          <span>{props.name}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Content(props) {\r\n  return (\r\n    <div className=\"content\">\r\n      {props.contentOnScreen.map((item, index) => {\r\n        return (\r\n          <Card\r\n            deleteFileFolder={props.deleteFileFolder}\r\n            editFileFolder={props.editFileFolder}\r\n            displayCurrentDirectory={props.displayCurrentDirectory}\r\n            key={index}\r\n            name={item.name}\r\n            type={item.type}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction AddEditCard(props) {\r\n  const [name, setName] = useState(props.editValue);\r\n\r\n  function handleInput(event) {\r\n    event.stopPropagation();\r\n    setName(event.target.value);\r\n  }\r\n  function handleCancel(event) {\r\n    event.stopPropagation();\r\n    props.setShowAddEditCard(false);\r\n  }\r\n  function handleCreate(event) {\r\n    event.stopPropagation();\r\n    if (props.operation === \"addFolder\") props.createFileFolder(name, \"folder\");\r\n    if (props.operation === \"addFile\") props.createFileFolder(name, \"file\");\r\n    props.setShowAddEditCard(false);\r\n  }\r\n\r\n  function handleEdit(event) {\r\n    event.stopPropagation();\r\n    props.handleEdit(name);\r\n    props.setShowAddEditCard(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-card-window\">\r\n      <div className=\"add-card\">\r\n        <div className=\"input-container\">\r\n          <input\r\n            onChange={handleInput}\r\n            onClick={(e) => e.stopPropagation()}\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n          />\r\n        </div>\r\n        <div className=\"add-card-btns\">\r\n          <button onClick={handleCancel} className=\"cancel-btn\">\r\n            Cancel\r\n          </button>\r\n          {(props.operation === \"edit\") ?\r\n            <button onClick={handleEdit} className=\"create-btn\">Save</button>\r\n            :\r\n            <button onClick={handleCreate} className=\"create-btn\">Create</button>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEditCard;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport Breadcrumb from \"./components/Breadcrumb\";\nimport Content from \"./components/Content\";\nimport AddEditCard from \"./components/AddEditCard\";\n// import { InsertChart } from \"@material-ui/icons\";\n\nconst initialFolder = {\n  key: \"1\",\n  name: \"my drive\",\n  files: [],\n  folders: [\n    {\n      name: \"Demo Folder\",\n      type: \"folder\",\n      files: [],\n      folders: []\n    }\n  ]\n};\n\nfunction App() {\n  const [showAddEditCard, setShowAddEditCard] = useState(false);\n  const [driveContent, setDriveContent] = useState(initialFolder);\n  const [path, setPath] = useState([\"mydrive\"]);\n  const [contentOnScreen, setContentOnScreen] = useState(initialFolder[\"folders\"].concat(initialFolder[\"files\"]));\n  // state to set operations like add folder/file etc\n  const [operation, setOperation] = useState();\n  const [editValue,setEditValue] = useState(\"\");\n  const [editType,setEditType] = useState(\"\");\n\n  // function to find current working directory and returning the appropriate array for file\n  function findCurrentDirectory() {\n    var currentDirectory = driveContent;\n    var currentArrayToLookInto = currentDirectory[\"folders\"];\n    path.forEach((level) => {\n      if (level !== \"my drive\")\n        for (var i = 0; i < currentArrayToLookInto.length; i++) {\n          if (level === currentArrayToLookInto[i].name) {\n            currentDirectory = currentArrayToLookInto[i];\n            currentArrayToLookInto = currentArrayToLookInto[i][\"folders\"];\n            break;\n          }\n        }\n    });\n    return currentDirectory;\n  }\n\n  // function to create new file/folder inside current directory\n  function createFileFolder(name, type) {\n    type = type + \"s\";\n    var duplicateItem = false;\n    var currentArrayToLookInto = findCurrentDirectory()[type];\n    var fObject;\n    if (type === \"folders\") {\n      fObject = { name: name, type: \"folder\", files: [], folders: [] };\n    } else {\n      fObject = { name: name, type: \"file\" };\n    }\n    currentArrayToLookInto.forEach((obj) => {\n      if (obj.name === name) {\n        window.alert(\"Already Present\");\n        duplicateItem = true;\n      }\n    });\n    if (!duplicateItem) {\n      currentArrayToLookInto.push(fObject);\n      setDriveContent(driveContent);\n      var currentDirectory = findCurrentDirectory();\n      setContentOnScreen(currentDirectory[\"folders\"].concat(currentDirectory[\"files\"]));\n    }\n  }\n\n  function displayCurrentDirectory(name) {\n    setPath((prevValue) => [...prevValue, name]);\n  }\n  useEffect(() => {\n    var currentDirectory = findCurrentDirectory();\n    setContentOnScreen(currentDirectory[\"folders\"].concat(currentDirectory[\"files\"]));\n  }, [path, driveContent]);\n\n    function deleteFileFolder (name, type) {\n    var newDriveContent = driveContent;\n    var newArray = [];\n    var currentDirectory = findCurrentDirectory();\n    var deleteIndex;\n    type += \"s\";\n    currentDirectory[type].forEach((item) => {\n      if (item.name != name) {\n        newArray.push(item);\n      }\n    });\n    currentDirectory[type] = newArray;\n    setDriveContent(newDriveContent);\n    setContentOnScreen(currentDirectory[\"folders\"].concat(currentDirectory[\"files\"]));\n  }\n\n  function editFileFolder(name, type, operation) {\n    setOperation(operation);\n    setShowAddEditCard(true);\n    setEditValue(name);\n    setEditType(type);\n  }\n\n  function handleEdit(name) {\n    var newDriveContent = driveContent;\n    var currentDirectory = findCurrentDirectory();\n    currentDirectory[`${editType}s`].forEach(item => {\n      if(item.name === editValue) {\n        item.name = name;\n      }\n    });\n    setDriveContent(newDriveContent);\n    setContentOnScreen(currentDirectory[\"folders\"].concat(currentDirectory[\"files\"]));\n    setEditValue(\"\");\n  }\n\n  // function to be called when any value at breadcrumb is clicked\n  function alterPath(index) {\n    var newPath = []\n    for(var i=0;i<=index;i++) {\n      newPath.push(path[i]);\n    }\n    setPath(newPath);\n    var currentDirectory = findCurrentDirectory();\n    setContentOnScreen(currentDirectory[\"folders\"].concat(currentDirectory[\"files\"]));\n  }\n\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <Breadcrumb\n        path={path}\n        alterPath={alterPath}\n        setOperation={setOperation}\n        setShowAddEditCard={setShowAddEditCard}\n      />\n      <Content\n        deleteFileFolder={deleteFileFolder}\n        editFileFolder={editFileFolder}\n        displayCurrentDirectory={displayCurrentDirectory}\n        contentOnScreen={contentOnScreen}\n      />\n      {showAddEditCard && (\n        <AddEditCard\n          operation={operation}\n          editValue={editValue}\n          handleEdit={handleEdit}\n          createFileFolder={createFileFolder}\n          setShowAddEditCard={setShowAddEditCard}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}